/**
 * {{query.name}}
 * {{#if query.description}}{{query.description}}{{/if}}
 * @generated Este arquivo foi gerado automaticamente - NÃO EDITAR
 * @timestamp {{timestamp}}
 */

export interface {{pascalCase query.name}}Params {
{{#each query.params}}
  {{name}}: {{type}};
{{/each}}
}

export type {{pascalCase query.name}}Result = {{#if query.returnSingle}}{{query.returnType}}{{else}}{{query.returnType}}[]{{/if}};

export const {{camelCase query.name}}Query = `{{query.sql}}`;

/**
 * Executa a consulta {{query.name}}
 * @param db Conexão com o banco de dados
 * @param params Parâmetros da consulta
 * @returns Resultado da consulta
 */
export async function {{camelCase query.name}}(
  db: any,
  params: {{pascalCase query.name}}Params
): Promise<{{pascalCase query.name}}Result{{#unless query.returnSingle}}[]{{/unless}}> {
  return db.execute<{{pascalCase query.name}}Result>({{camelCase query.name}}Query, Object.values(params));
}
